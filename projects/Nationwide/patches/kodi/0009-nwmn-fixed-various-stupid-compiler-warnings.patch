From ea1bdeeb023ca551a9d11430a992f4004ac746b9 Mon Sep 17 00:00:00 2001
From: "S. Davilla" <davilla@4pi.com>
Date: Thu, 23 Jul 2015 12:37:35 -0400
Subject: [PATCH 09/24] [nwmn] fixed, various stupid compiler warnings

---
 lib/libUPnP/Neptune/Source/Core/NptZip.cpp         |    2 +-
 xbmc/Application.cpp                               |    2 +-
 .../DVDCodecs/Overlay/contrib/cc_decoder.c         |    2 --
 xbmc/dbwrappers/mysqldataset.cpp                   |    8 ++++----
 xbmc/guilib/GUIFontTTF.cpp                         |    2 +-
 xbmc/peripherals/devices/Peripheral.cpp            |   17 +++++++++++++----
 xbmc/pvr/PVRGUIInfo.cpp                            |    2 +-
 7 files changed, 21 insertions(+), 14 deletions(-)

diff --git a/lib/libUPnP/Neptune/Source/Core/NptZip.cpp b/lib/libUPnP/Neptune/Source/Core/NptZip.cpp
index bed1e55..53c1fc4 100644
--- a/lib/libUPnP/Neptune/Source/Core/NptZip.cpp
+++ b/lib/libUPnP/Neptune/Source/Core/NptZip.cpp
@@ -52,7 +52,7 @@ static const NPT_UInt32 NPT_ZIP_END_OF_CENTRAL_DIRECTORY_SIGNATURE           = 0
 static const NPT_UInt32 NPT_ZIP64_END_OF_CENTRAL_DIRECTORY_SIGNATURE         = 0x06064b50;
 static const NPT_UInt32 NPT_ZIP64_END_OF_CENTRAL_DIRECTORY_LOCATOR_SIGNATURE = 0x07064b50;
 static const NPT_UInt32 NPT_ZIP_CENTRAL_FILE_HEADER_SIGNATURE                = 0x02014b50;
-static const NPT_UInt32 NPT_ZIP_LOCAL_FILE_HEADER_SIGNATURE                  = 0x04034b50;
+//static const NPT_UInt32 NPT_ZIP_LOCAL_FILE_HEADER_SIGNATURE                  = 0x04034b50;
 static const NPT_UInt16 NPT_ZIP_EXT_DATA_TYPE_ZIP64                          = 0x0001;
 
 static const NPT_UInt32 NPT_ZIP_MAX_DIRECTORY_SIZE = 0x1000000; // 16 MB
diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index a250413..e807157 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2416,7 +2416,7 @@ bool CApplication::OnAction(const CAction &action)
   }
 
   // Check for global volume control
-  if ((action.GetAmount() && (action.GetID() == ACTION_VOLUME_UP || action.GetID() == ACTION_VOLUME_DOWN) || action.GetID() == ACTION_VOLUME_SET))
+  if ((action.GetAmount() && ((action.GetID() == ACTION_VOLUME_UP || action.GetID() == ACTION_VOLUME_DOWN) || action.GetID() == ACTION_VOLUME_SET)))
   {
     if (!m_pPlayer->IsPassthrough())
     {
diff --git a/xbmc/cores/dvdplayer/DVDCodecs/Overlay/contrib/cc_decoder.c b/xbmc/cores/dvdplayer/DVDCodecs/Overlay/contrib/cc_decoder.c
index 0c9c6f0..c207204 100644
--- a/xbmc/cores/dvdplayer/DVDCodecs/Overlay/contrib/cc_decoder.c
+++ b/xbmc/cores/dvdplayer/DVDCodecs/Overlay/contrib/cc_decoder.c
@@ -575,8 +575,6 @@ void decode_cc(cc_decoder_t *dec, uint8_t *buffer, uint32_t buf_len)
   uint32_t i;
   for (i = 0; i<buf_len; i += 3)
   {
-    
-    unsigned char cc_valid = buffer[i] & 0x04;
     unsigned char cc_type = buffer[i] & 0x03;
 
     uint8_t data1 = buffer[i + 1];
diff --git a/xbmc/dbwrappers/mysqldataset.cpp b/xbmc/dbwrappers/mysqldataset.cpp
index 53e6e41..e90221d 100644
--- a/xbmc/dbwrappers/mysqldataset.cpp
+++ b/xbmc/dbwrappers/mysqldataset.cpp
@@ -915,8 +915,8 @@ void MysqlDatabase::mysqlVXPrintf(
         }
         bufpt = &buf[etBUFSIZE-1];
         {
-          register const char *cset;      /* Use registers for speed */
-          register int base;
+          const char *cset;      /* Use registers for speed */
+          int base;
           cset = &aDigits[infop->charset];
           base = infop->base;
           do{                                           /* Convert to ascii */
@@ -1164,7 +1164,7 @@ void MysqlDatabase::mysqlVXPrintf(
     ** the output.
     */
     if( !flag_leftjustify ){
-      register int nspace;
+      int nspace;
       nspace = width-length;
       if( nspace>0 ){
         appendSpace(pAccum, nspace);
@@ -1174,7 +1174,7 @@ void MysqlDatabase::mysqlVXPrintf(
       mysqlStrAccumAppend(pAccum, bufpt, length);
     }
     if( flag_leftjustify ){
-      register int nspace;
+      int nspace;
       nspace = width-length;
       if( nspace>0 ){
         appendSpace(pAccum, nspace);
diff --git a/xbmc/guilib/GUIFontTTF.cpp b/xbmc/guilib/GUIFontTTF.cpp
index 40c6444..d21ea91 100644
--- a/xbmc/guilib/GUIFontTTF.cpp
+++ b/xbmc/guilib/GUIFontTTF.cpp
@@ -728,7 +728,7 @@ bool CGUIFontTTFBase::CacheCharacter(wchar_t letter, uint32_t style, Character *
       m_posX += -bitGlyph->left;
 
     // check we have enough room for the character
-    if (m_posX + bitGlyph->left + bitmap.width > m_textureWidth)
+    if (m_posX + bitGlyph->left + bitmap.width > (int)m_textureWidth)
     { // no space - gotta drop to the next line (which means creating a new texture and copying it across)
       m_posX = 0;
       m_posY += GetTextureLineHeight();
diff --git a/xbmc/peripherals/devices/Peripheral.cpp b/xbmc/peripherals/devices/Peripheral.cpp
index 93bbb90..d67817d 100644
--- a/xbmc/peripherals/devices/Peripheral.cpp
+++ b/xbmc/peripherals/devices/Peripheral.cpp
@@ -53,10 +53,19 @@ CPeripheral::CPeripheral(const PeripheralScanResult& scanResult) :
 {
   PeripheralTypeTranslator::FormatHexString(scanResult.m_iVendorId, m_strVendorId);
   PeripheralTypeTranslator::FormatHexString(scanResult.m_iProductId, m_strProductId);
-  m_strFileLocation = StringUtils::Format(scanResult.m_iSequence > 0 ? "peripherals://%s/%s_%d.dev" : "peripherals://%s/%s.dev",
-                                          PeripheralTypeTranslator::BusTypeToString(scanResult.m_busType),
-                                          scanResult.m_strLocation.c_str(),
-                                          scanResult.m_iSequence);
+  if (scanResult.m_iSequence > 0)
+  {
+    m_strFileLocation = StringUtils::Format("peripherals://%s/%s_%d.dev",
+                                            PeripheralTypeTranslator::BusTypeToString(scanResult.m_busType),
+                                            scanResult.m_strLocation.c_str(),
+                                            scanResult.m_iSequence);
+  }
+  else
+  {
+    m_strFileLocation = StringUtils::Format("peripherals://%s/%s.dev",
+                                            PeripheralTypeTranslator::BusTypeToString(scanResult.m_busType),
+                                            scanResult.m_strLocation.c_str());
+  }
 }
 
 CPeripheral::~CPeripheral(void)
diff --git a/xbmc/pvr/PVRGUIInfo.cpp b/xbmc/pvr/PVRGUIInfo.cpp
index 627fa77..4ba361e 100644
--- a/xbmc/pvr/PVRGUIInfo.cpp
+++ b/xbmc/pvr/PVRGUIInfo.cpp
@@ -495,7 +495,7 @@ void CPVRGUIInfo::CharInfoBackendNumber(std::string &strValue) const
   size_t numBackends = m_backendProperties.size();
 
   if (numBackends > 0)
-    strValue = StringUtils::Format("%u %s %u", m_iCurrentActiveClient + 1, g_localizeStrings.Get(20163).c_str(), numBackends);
+    strValue = StringUtils::Format("%u %s %zu", m_iCurrentActiveClient + 1, g_localizeStrings.Get(20163).c_str(), numBackends);
   else
     strValue = g_localizeStrings.Get(14023);
 }
-- 
1.7.9.5

