From 54e4bc4fa552d32825ed206fe8f28b4054cf29b5 Mon Sep 17 00:00:00 2001
From: "S. Davilla" <davilla@4pi.com>
Date: Sun, 2 Feb 2014 17:29:37 -0500
Subject: [PATCH] [RED] fix-builtin-resolution

---
 xbmc/interfaces/Builtins.cpp    | 28 ++++++++++++++++++----------
 xbmc/settings/DisplaySettings.h |  3 ++-
 2 files changed, 20 insertions(+), 11 deletions(-)

diff --git a/xbmc/interfaces/Builtins.cpp b/xbmc/interfaces/Builtins.cpp
index 8669901..8de516e 100644
--- a/xbmc/interfaces/Builtins.cpp
+++ b/xbmc/interfaces/Builtins.cpp
@@ -495,16 +495,24 @@ int CBuiltins::Execute(const CStdString& execString)
   else if (execute.Equals("resolution"))
   {
     RESOLUTION res = RES_PAL_4x3;
-    if (parameter.Equals("pal")) res = RES_PAL_4x3;
-    else if (parameter.Equals("pal16x9")) res = RES_PAL_16x9;
-    else if (parameter.Equals("ntsc")) res = RES_NTSC_4x3;
-    else if (parameter.Equals("ntsc16x9")) res = RES_NTSC_16x9;
-    else if (parameter.Equals("720p")) res = RES_HDTV_720p;
-    else if (parameter.Equals("720pSBS")) res = RES_HDTV_720pSBS;
-    else if (parameter.Equals("720pTB")) res = RES_HDTV_720pTB;
-    else if (parameter.Equals("1080pSBS")) res = RES_HDTV_1080pSBS;
-    else if (parameter.Equals("1080pTB")) res = RES_HDTV_1080pTB;
-    else if (parameter.Equals("1080i")) res = RES_HDTV_1080i;
+    if (parameter.Equals("pal"))            res = RES_PAL_4x3;
+    else if (parameter.Equals("pal16x9"))   res = RES_PAL_16x9;
+    else if (parameter.Equals("ntsc"))      res = RES_NTSC_4x3;
+    else if (parameter.Equals("ntsc16x9"))  res = RES_NTSC_16x9;
+    else if (parameter.Equals("720p"))      res = RES_HDTV_720p;
+    else if (parameter.Equals("720pSBS"))   res = RES_HDTV_720pSBS;
+    else if (parameter.Equals("720pTB"))    res = RES_HDTV_720pTB;
+    else if (parameter.Equals("1080pSBS"))  res = RES_HDTV_1080pSBS;
+    else if (parameter.Equals("1080pTB"))   res = RES_HDTV_1080pTB;
+    else if (parameter.Equals("1080i"))     res = RES_HDTV_1080i;
+    else
+    {
+      // format: SWWWWWHHHHHRRR.RRRRRP, where,
+      //  S = screen, W = width, H = height, R = refresh, P = interlace
+      res = CDisplaySettings::GetResolutionFromString(parameter);
+      const char *strMode = CDisplaySettings::Get().GetResolutionInfo(res).strMode.c_str();
+      CLog::Log(LOGERROR,"resolution:res(%d), parameter(%s), strMode(%s)", res, parameter.c_str(), strMode);
+    }
     if (g_graphicsContext.IsValidResolution(res))
     {
       CDisplaySettings::Get().SetCurrentResolution(res, true);
diff --git a/xbmc/settings/DisplaySettings.h b/xbmc/settings/DisplaySettings.h
index 8ee1be2..74d2fe9 100644
--- a/xbmc/settings/DisplaySettings.h
+++ b/xbmc/settings/DisplaySettings.h
@@ -96,6 +96,8 @@ public:
   static void SettingOptionsStereoscopicModesFiller(const CSetting *setting, std::vector< std::pair<std::string, int> > &list, int &current);
   static void SettingOptionsPreferredStereoscopicViewModesFiller(const CSetting *setting, std::vector< std::pair<std::string, int> > &list, int &current);
 
+  static RESOLUTION GetResolutionFromString(const std::string &strResolution);
+
 protected:
   CDisplaySettings();
   CDisplaySettings(const CDisplaySettings&);
@@ -104,7 +106,6 @@ protected:
 
   DisplayMode GetCurrentDisplayMode() const;
 
-  static RESOLUTION GetResolutionFromString(const std::string &strResolution);
   static std::string GetStringFromResolution(RESOLUTION resolution, float refreshrate = 0.0f);
   static RESOLUTION GetResolutionForScreen();
 
-- 
1.8.3.4 (Apple Git-47)

